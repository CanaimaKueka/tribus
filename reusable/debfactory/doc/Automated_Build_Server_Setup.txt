This document describes how to setup an automated build server using the 
debfactory scripts.

We will use anomymous FTP to receive the source files to be build.
vsftpd was selected because it is a main package, most likely to have security updates on a timely manner.

1. Create new user
$ sudo adduser build

2. Upload public key to the new user
(local)$ ssh-copy-id "-p 22333 build@zulu309.server4you.de"

3. Get the code
(build)$ bzr branch lp:debfactory

4. Install python dependencies
$ sudo apt-get install python-rdflib

5. Edit config file
(build)$ nano debfactory/etc/debfactory.conf.sample
(build)$ mv debfactory/etc/debfactory.conf.sample debfactory/etc/debfactory.conf

6. Import uploaders' gpg keys
(build)$ python debfactory/bin/import_uploaders_gpg_keys.py
(The directory ~/.gnupg may have to be created first)

7. Create build chroot
	7.1 Branch debfactory with a user who has sudo permission
	$ bzr branch lp:debfactory

	7.2 Create the chroots for the different releases and archs
	$ sudo python debfactory/bin/build_schroot.py -c /var/chroot -s

8. Configure sbuild
	8.1 Set mandatory mailto
	$ sudo nano /etc/sbuild/sbuild.conf
	$mailto = "build";
	$log_dir = "/build/logs";

	8.2 Add build user to sbuild group
	$ sudo usermod -a -G sbuild build

9. Create output directories
sudo mkdir -m755 -p /build/logs
sudo chown -R build /build

10. Link directory to HTTP server (optional, only for viewing the build logs)
$ cd /var/www
$ sudo ln -s /build/

11. Configure schroot
	$ sudo cp debfactory/etc/50localrep /etc/schroot/setup.d/
	$ sudo chmod +x /etc/schroot/setup.d/50localrep

12. Create ftp server
	8.1 Install FTP server
	$ sudo apt-get install vsftpd

	8.2 Configure the FTP server
	$ sudo nano /etc/vsftpd.conf
	anonymous_enable=YES
	local_enable=NO
	write_enable=YES
	anon_upload_enable=YES
	chown_uploads=YES
	chown_username=build

	8.3 Restart server
	$ sudo restart vsftpd

	8.4 Create upload dirs
	$ release=lucid
	$ sudo mkdir -m777 -p /srv/ftp/incoming/$release/{apps,games}

13. Create local dput.cf
	(local)~/.dput.cf
	[lucid-getdeb-games]
	fqdn=zulu309.server4you.de
	login=anonymous
	incoming=incoming/lucid/games
	allow_unsigned_uploads=0
	progress_indicator=2
	passive_ftp=1

14. Upload file
	(local)dput -f oneiric-getdeb-apps nautilus-actions_3.2.0-1~getdeb1_source.changes

15. Test incoming
	(build)$ python $HOME/debfactory/build/process_incoming.py -i /srv/ftp/incoming/ -o /build/pre_build

16. Test build
	(build)$ python $HOME/debfactory/build/process_pre_build.py -i /build/pre_build -o /build/post_build

17. Crontab setup
	See the crontab file.
	The log directory has to be created first
	(build)$ mkdir -p $HOME/var/log
